create or replace TRIGGER Trigger_AuditoriaUsuario
  AFTER
    INSERT 
    OR DELETE
    OR UPDATE OF NOMBRE, NUMEROTELEFONO, EMAIL, PAYPAL, APELLIDOS, FECHA_NACIMIENTO, CONTRASENA, "online"
  ON USUARIO
  FOR EACH ROW
  BEGIN
    CASE
      WHEN (INSERTING) THEN
        INSERT INTO AUDITORIAUSUARIO VALUES(SYSDATE,'I',to_char(:NEW.ID),to_char(:NEW.ID),:NEW.ID,null);
      WHEN (DELETING) THEN
        INSERT INTO AUDITORIAUSUARIO VALUES(SYSDATE,'D',to_char(:OLD.ID),to_char(:OLD.ID),:OLD.ID,null);
      WHEN(UPDATING ('NOMBRE')) then
        INSERT INTO AUDITORIAUSUARIO VALUES(SYSDATE,'U',to_char(:NEW.NOMBRE),to_char(:NEW.NOMBRE),:NEW.ID,'NOMBRE');
      WHEN(UPDATING ('NUMEROTELEFONO')) then
        INSERT INTO AUDITORIAUSUARIO VALUES(SYSDATE,'U',to_char(:NEW.NUMEROTELEFONO),to_char(:NEW.NUMEROTELEFONO),:NEW.ID,'NUMEROTELEFONO');
      WHEN(UPDATING ('EMAIL')) then
        INSERT INTO AUDITORIAUSUARIO VALUES(SYSDATE,'U',to_char(:NEW.EMAIL),to_char(:NEW.EMAIL),:NEW.ID,'EMAIL');
      WHEN(UPDATING ('PAYPAL')) then
        INSERT INTO AUDITORIAUSUARIO VALUES(SYSDATE,'U',to_char(:NEW.PAYPAL),to_char(:NEW.PAYPAL),:NEW.ID,'PAYPAL');
      WHEN(UPDATING ('APELLIDOS')) then
        INSERT INTO AUDITORIAUSUARIO VALUES(SYSDATE,'U',to_char(:NEW.APELLIDOS),to_char(:NEW.APELLIDOS),:NEW.ID,'APELLIDOS');
      WHEN(UPDATING ('FECHA_NACIMIENTO')) then
        INSERT INTO AUDITORIAUSUARIO VALUES(SYSDATE,'U',to_char(:NEW.FECHA_NACIMIENTO),to_char(:NEW.FECHA_NACIMIENTO),:NEW.ID,'FECHA_NACIMIENTO');
      WHEN(UPDATING ('CONTRASENA')) then
        INSERT INTO AUDITORIAUSUARIO VALUES(SYSDATE,'U',to_char(:NEW.CONTRASENA),to_char(:NEW.CONTRASENA),:NEW.ID,'CONTRASENA');
      WHEN(UPDATING ('"online"')) then
        INSERT INTO AUDITORIAUSUARIO VALUES(SYSDATE,'U',to_char(:NEW."online"),to_char(:NEW."online"),:NEW.ID,'"online"');
    END CASE;
  END;

create or replace TRIGGER Trigger_AuditoriaCuenta
  AFTER
    INSERT 
    OR DELETE
    OR UPDATE OF NOMBRE, COSTO, FECHA_CREACION
  ON CUENTA
  FOR EACH ROW
  BEGIN
    CASE
      WHEN (INSERTING) THEN
        INSERT INTO AUDITORIACUENTA VALUES(SYSDATE,'I',to_char(:NEW.ID),to_char(:NEW.ID),:NEW.ID,null);
      WHEN (DELETING) THEN
        INSERT INTO AUDITORIACUENTA VALUES(SYSDATE,'D',to_char(:OLD.ID),to_char(:OLD.ID),:OLD.ID,null);
      WHEN(UPDATING ('NOMBRE')) then
        INSERT INTO AUDITORIACUENTA VALUES(SYSDATE,'U',to_char(:NEW.NOMBRE),to_char(:NEW.NOMBRE),:NEW.ID,'NOMBRE');
      WHEN(UPDATING ('COSTO')) then
        INSERT INTO AUDITORIACUENTA VALUES(SYSDATE,'U',to_char(:NEW.COSTO),to_char(:NEW.COSTO),:NEW.ID,'COSTO');
      WHEN(UPDATING ('FECHA_CREACION')) then
        INSERT INTO AUDITORIACUENTA VALUES(SYSDATE,'U',to_char(:NEW.FECHA_CREACION),to_char(:NEW.FECHA_CREACION),:NEW.ID,'FECHA_CREACION');
    END CASE;
  END;


create or replace TRIGGER Trigger_AuditoriaGrupos
  AFTER
    INSERT 
    OR DELETE
    OR UPDATE OF NOMBRE, USUARIODUENO_ID, DISUELTO, RETENIDO
  ON GRUPO
  FOR EACH ROW
  BEGIN
    CASE
      WHEN (INSERTING) THEN
        INSERT INTO AUDITORIAGRUPOS VALUES(SYSDATE,'I',to_char(:NEW.ID),to_char(:NEW.ID),:NEW.ID,null);
      WHEN (DELETING) THEN
        INSERT INTO AUDITORIAGRUPOS VALUES(SYSDATE,'D',to_char(:OLD.ID),to_char(:OLD.ID),:OLD.ID,null);
      WHEN(UPDATING ('USUARIODUENO_ID')) then
        INSERT INTO AUDITORIAGRUPOS VALUES(SYSDATE,'U',to_char(:NEW.USUARIODUENO_ID),to_char(:NEW.USUARIODUENO_ID),:NEW.ID,'USUARIODUENO_ID');
      WHEN(UPDATING ('DISUELTO')) then
        INSERT INTO AUDITORIAGRUPOS VALUES(SYSDATE,'U',to_char(:NEW.DISUELTO),to_char(:NEW.DISUELTO),:NEW.ID,'DISUELTO');
      WHEN(UPDATING ('RETENIDO')) then
        INSERT INTO AUDITORIAGRUPOS VALUES(SYSDATE,'U',to_char(:NEW.RETENIDO),to_char(:NEW.RETENIDO),:NEW.ID,'RETENIDO');
    END CASE;
  END;
  
create or replace TRIGGER Trigger_AuditoriaUbicacion
  AFTER
    INSERT 
    OR DELETE
    OR UPDATE OF LONGITUDGRADOS, LONGITUDMINUTOS, LONGITUDSEGUNDOS, LATITUDGRADOS, LATITUDMINUTOS, LATITUDSEGUNDOS
  ON UBICACION
  FOR EACH ROW
  BEGIN
    CASE
      WHEN (INSERTING) THEN
        INSERT INTO AUDITORIAUBICACION VALUES(SYSDATE,'I',:NEW.USUARIO_ID,:NEW.FECHA,to_char(:NEW.USUARIO_ID),to_char(:NEW.USUARIO_ID), null);
      WHEN (DELETING) THEN
        INSERT INTO AUDITORIAUBICACION VALUES(SYSDATE,'D',:OLD.USUARIO_ID, :OLD.FECHA,to_char(:OLD.USUARIO_ID),to_char(:OLD.USUARIO_ID), null);
      WHEN(UPDATING ('LONGITUDGRADOS')) then
        INSERT INTO AUDITORIAUBICACION VALUES(SYSDATE,'U',:NEW.USUARIO_ID,:NEW.FECHA, to_char(:NEW.LONGITUDGRADOS), to_char(:OLD.LONGITUDGRADOS), 'LONGITUDGRADOS');
      WHEN(UPDATING ('LONGITUDMINUTOS')) then
        INSERT INTO AUDITORIAUBICACION VALUES(SYSDATE,'U',:NEW.USUARIO_ID,:NEW.FECHA, to_char(:NEW.LONGITUDMINUTOS), to_char(:OLD.LONGITUDMINUTOS), 'LONGITUDMINUTOS');
      WHEN(UPDATING ('LONGITUDSEGUNDOS')) then
        INSERT INTO AUDITORIAUBICACION VALUES(SYSDATE,'U',:NEW.USUARIO_ID,:NEW.FECHA, to_char(:NEW.LONGITUDSEGUNDOS), to_char(:OLD.LONGITUDSEGUNDOS), 'LONGITUDSEGUNDOS');
      WHEN(UPDATING ('LATITUDGRADOS')) then
        INSERT INTO AUDITORIAUBICACION VALUES(SYSDATE,'U',:NEW.USUARIO_ID,:NEW.FECHA, to_char(:NEW.LATITUDGRADOS), to_char(:OLD.LATITUDGRADOS), 'LATITUDGRADOS');
      WHEN(UPDATING ('LATITUDMINUTOS')) then
        INSERT INTO AUDITORIAUBICACION VALUES(SYSDATE,'U',:NEW.USUARIO_ID,:NEW.FECHA, to_char(:NEW.LATITUDMINUTOS), to_char(:OLD.LATITUDMINUTOS), 'LATITUDMINUTOS');
      WHEN(UPDATING ('LATITUDSEGUNDOS')) then
        INSERT INTO AUDITORIAUBICACION VALUES(SYSDATE,'U',:NEW.USUARIO_ID,:NEW.FECHA, to_char(:NEW.LATITUDSEGUNDOS), to_char(:OLD.LATITUDSEGUNDOS), 'LATITUDSEGUNDOS');
    END CASE;
  END;

create or replace TRIGGER Trigger_AuditoriaContactos
  AFTER
    INSERT 
    OR DELETE
  ON CONTACTO_DE
  FOR EACH ROW
  BEGIN
    CASE
      WHEN (INSERTING) THEN
        INSERT INTO AUDITORIACONTACTOS VALUES(SYSDATE,'I',:NEW.USUARIO_ID,:NEW.USUARIO_ID1);
      WHEN (DELETING) THEN
        INSERT INTO AUDITORIACONTACTOS VALUES(SYSDATE,'D',:OLD.USUARIO_ID, :OLD.USUARIO_ID1);
    END CASE;
  END;
  
create or replace TRIGGER Trigger_AuditoriaPertenece
  AFTER
    INSERT 
    OR DELETE
    OR UPDATE OF FECHA_SALIDA 
  ON PERTENECE_A
  FOR EACH ROW
  BEGIN
    CASE
      WHEN (INSERTING) THEN
        INSERT INTO AUDITORIAPERTENECE(FECHA,OPERACION,ID_USUARIO,GRUPO_ID,FECHAINGRESO) VALUES(SYSDATE,'I',:NEW.USUARIO_ID,:NEW.GRUPO_ID, :NEW.FECHA_INGRESO);
      WHEN (DELETING) THEN
        INSERT INTO AUDITORIAPERTENECE(FECHA,OPERACION,ID_USUARIO,GRUPO_ID,FECHAINGRESO) VALUES(SYSDATE,'D',:OLD.USUARIO_ID, :OLD.GRUPO_ID, :OLD.FECHA_INGRESO);
      WHEN (UPDATING ('FECHA_SALIDA')) THEN
        INSERT INTO AUDITORIAPERTENECE VALUES(SYSDATE, 'U', :NEW.USUARIO_ID,:NEW.GRUPO_ID, :NEW.FECHA_INGRESO, :NEW.FECHA_SALIDA, :OLD.FECHA_SALIDA, 'FECHA_SALIDA');
    END CASE;
  END;
  
create or replace TRIGGER Trigger_AuditoriaTransaccion
  AFTER
    INSERT 
    OR DELETE
    OR UPDATE OF CANTIDAD, TIPO, FECHA_APROBACION 
  ON TRANSACCION
  FOR EACH ROW
  BEGIN
    CASE
      WHEN (INSERTING) THEN
        INSERT INTO AUDITORIATRANSACCION VALUES(SYSDATE,'I',NULL,NULL, NULL, :NEW.ID, :NEW.DEUDA_CUENTA_ID, :NEW.DEUDA_USUARIO_ID, :NEW.DEUDA_ID_DEUDA);
      WHEN (DELETING) THEN
        INSERT INTO AUDITORIATRANSACCION VALUES(SYSDATE,'D',NULL,NULL, NULL, :OLD.ID, :OLD.DEUDA_CUENTA_ID, :OLD.DEUDA_USUARIO_ID, :OLD.DEUDA_ID_DEUDA);
      WHEN (UPDATING ('CANTIDAD')) THEN
        INSERT INTO AUDITORIATRANSACCION VALUES(SYSDATE,'U',:NEW.CANTIDAD, :OLD.CANTIDAD, 'CANTIDAD', :OLD.ID, :OLD.DEUDA_CUENTA_ID, :OLD.DEUDA_USUARIO_ID, :OLD.DEUDA_ID_DEUDA);
      WHEN (UPDATING ('TIPO')) THEN
        INSERT INTO AUDITORIATRANSACCION VALUES(SYSDATE,'U',:NEW.TIPO, :OLD.TIPO, 'TIPO', :OLD.ID, :OLD.DEUDA_CUENTA_ID, :OLD.DEUDA_USUARIO_ID, :OLD.DEUDA_ID_DEUDA);
      WHEN (UPDATING ('FECHA_APROBACION')) THEN
        INSERT INTO AUDITORIATRANSACCION VALUES(SYSDATE,'U',:NEW.FECHA_APROBACION, :OLD.FECHA_APROBACION, 'FECHA_APROBACION', :OLD.ID, :OLD.DEUDA_CUENTA_ID, :OLD.DEUDA_USUARIO_ID, :OLD.DEUDA_ID_DEUDA);
    END CASE;
  END;
  
create or replace TRIGGER Trigger_AuditoriaDeuda
  AFTER
    INSERT 
    OR DELETE
    OR UPDATE OF CANTIDAD 
  ON DEUDA
  FOR EACH ROW
  BEGIN
    CASE
      WHEN (INSERTING) THEN
        INSERT INTO AUDITORIADEUDA VALUES(SYSDATE,'I',:NEW.ID_DEUDA,:NEW.USUARIO_ID, :NEW.CUENTA_ID, NULL,NULL, NULL);
      WHEN (DELETING) THEN
        INSERT INTO AUDITORIADEUDA VALUES(SYSDATE,'D',:OLD.ID_DEUDA,:OLD.USUARIO_ID, :OLD.CUENTA_ID, NULL,NULL, NULL);
      WHEN (UPDATING ('CANTIDAD')) THEN
        INSERT INTO AUDITORIADEUDA VALUES(SYSDATE,'U',:NEW.ID_DEUDA,:NEW.USUARIO_ID, :NEW.CUENTA_ID, :NEW.CANTIDAD , :OLD.CANTIDAD, 'CANTIDAD');
    END CASE;
  END;
  
create or replace TRIGGER Trigger_AuditoriaAprobada
  AFTER
    INSERT 
    OR DELETE
    OR UPDATE OF FECHA_APROBACION 
  ON ES_APROBADA
  FOR EACH ROW
  BEGIN
    CASE
      WHEN (INSERTING) THEN
        INSERT INTO AUDITORIAAPROBADA VALUES(SYSDATE,'I',NULL, NULL, NULL, :NEW.TRANSACCION_ID,:NEW.TRANSACCION_DEUDA_CUENTA_ID, :NEW.TRANSACCION_DEUDA_USUARIO_ID, :NEW.TRANSACCION_DEUDA_ID_DEUDA, :NEW.LIDERGRUPO_FECHAINGRESO, :NEW.LIDERGRUPO_GRUPO_ID, :NEW.LIDERGRUPO_USUARIO_ID);
      WHEN (DELETING) THEN
        INSERT INTO AUDITORIAAPROBADA VALUES(SYSDATE,'D',NULL, NULL, NULL, :OLD.TRANSACCION_ID,:OLD.TRANSACCION_DEUDA_CUENTA_ID, :OLD.TRANSACCION_DEUDA_USUARIO_ID, :OLD.TRANSACCION_DEUDA_ID_DEUDA, :OLD.LIDERGRUPO_FECHAINGRESO, :OLD.LIDERGRUPO_GRUPO_ID, :OLD.LIDERGRUPO_USUARIO_ID);
      WHEN (UPDATING ('FECHA_APROBACION')) THEN
        INSERT INTO AUDITORIAAPROBADA VALUES(SYSDATE,'U',:NEW.FECHA_APROBACION, :OLD.FECHA_APROBACION, 'FECHA_APROBACION', :NEW.TRANSACCION_ID,:NEW.TRANSACCION_DEUDA_CUENTA_ID, :NEW.TRANSACCION_DEUDA_USUARIO_ID, :NEW.TRANSACCION_DEUDA_ID_DEUDA, :NEW.LIDERGRUPO_FECHAINGRESO, :NEW.LIDERGRUPO_GRUPO_ID, :NEW.LIDERGRUPO_USUARIO_ID);
    END CASE;
  END;
  
create or replace TRIGGER Trigger_AuditoriaLiderGrupo
  AFTER
    INSERT 
    OR DELETE
    OR UPDATE OF FECHASALIDA 
  ON LIDERGRUPO
  FOR EACH ROW
  BEGIN
    CASE
      WHEN (INSERTING) THEN
        INSERT INTO AUDITORIALIDERGRUPO VALUES(SYSDATE,'I',NULL, NULL, NULL, :NEW.FECHAINGRESO,:NEW.GRUPO_ID, :NEW.USUARIO_ID);
      WHEN (DELETING) THEN
        INSERT INTO AUDITORIALIDERGRUPO VALUES(SYSDATE,'D',NULL, NULL, NULL, :OLD.FECHAINGRESO,:OLD.GRUPO_ID, :OLD.USUARIO_ID);
      WHEN (UPDATING ('FECHASALIDA')) THEN
        INSERT INTO AUDITORIALIDERGRUPO VALUES(SYSDATE,'U',:NEW.FECHASALIDA, :OLD.FECHASALIDA, 'FECHASALIDA', :NEW.FECHAINGRESO,:NEW.GRUPO_ID, :NEW.USUARIO_ID);
    END CASE;
  END;